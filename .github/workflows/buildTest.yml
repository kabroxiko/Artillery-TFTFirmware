name: Test Build
on:
  pull_request_target:
    paths-ignore:
      - Bootloader/**
      - Copy to SD Card root directory to update/**
      - images/**
      - readme/**
      - '**/*.md'
  workflow_call:
    outputs:
      version:
        description: "Tag name for release"
        value: v${{ jobs.prepare.outputs.version }}
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.matrix }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            .cache/pip
            .platformio/.cache
            venv
          key: ${{ runner.os }}-pio

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PlatformIO Core
        run:
          |
          python -m venv venv
          source venv/bin/activate
          pip install --disable-pip-version-check --upgrade platformio

      - name: List hardware
        id: list
        run: |
          JSON=$(cat .github/hardware.json | jq -c '.')
          echo matrix=${JSON} | tee -a $GITHUB_OUTPUT

      - name: Extract SOFTWARE_VERSION
        id: version
        run: |
          version=$(grep -Po '(?<=-DSOFTWARE_VERSION=)[0-9]+\.[0-9]+\.[0-9]+' platformio.ini)
          echo "version=$version" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            .cache/pip
            .platformio/.cache
            venv
          key: ${{ runner.os }}-pio

      - uses: montudor/action-zip@v1

      - name: Build artifacts
        run: |
          source venv/bin/activate
          platformio run --environment ${{ matrix.hardware }}
          set -x
          mv .pio/build/${{ matrix.hardware }}/*.bin MKS${{ matrix.assets_dir }}.bin
          if [ "${{ matrix.assets_dir }}" == "TFT32" ]; then
            mv "Copy to SD Card root directory to update/THEME_Unified Menu Material theme/TFT28" "${{ matrix.assets_dir }}"
          else
            mv "Copy to SD Card root directory to update/THEME_Unified Menu Material theme/${{ matrix.assets_dir }}" "."
          fi
          if [ "${{ matrix.custom_logo }}" != "" ]; then
            cp -a "Copy to SD Card root directory to update/THEME_Unified Menu Material theme/${{ matrix.custom_logo }}/bmp" \
              "${{ matrix.assets_dir }}"
          fi
          mv "Copy to SD Card root directory to update/config.ini" "."
          zip -mur ${{ matrix.hardware }}.zip MKS${{ matrix.assets_dir }}.bin ${{ matrix.assets_dir }} config.ini

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.hardware }}
          path: ${{ matrix.hardware }}.zip
          retention-days: 1
