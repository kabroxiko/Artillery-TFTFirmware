name: Build Binaries
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            .cache/pip
            .platformio/.cache
            venv
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run:
          |
          python -m venv venv
          source venv/bin/activate
          pip3 install --disable-pip-version-check --upgrade platformio

      - id: list
        name: List hardware
        run: |
          JSON=$(cat hardware.json | jq -c '.')
          echo matrix=${JSON} | tee -a $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            .cache/pip
            .platformio/.cache
            venv
          key: ${{ runner.os }}-pio
      - name: Build Artillery TFT Controller V1.2
        run: |
          source venv/bin/activate
          platformio run --environment ${{ matrix.hardware }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.hardware }}
          path: |
            .pio/build/${{ matrix.hardware }}
          retention-days: 1

  release:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false

  assets:
    needs: [prepare, build, release]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.hardware }}

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip firmware
        run: |
          mv *.bin MKS${{ matrix.tftfolder }}.bin
          zip -r ${GITHUB_WORKSPACE}/${{ matrix.hardware }}.zip MKS${{ matrix.tftfolder }}.bin

      - name: Zip icons
        run: |
          [ "${{ matrix.tftfolder }}" = "TFT32" ] &&
            mv ARTILLERY ${{ matrix.tftfolder }}
          zip -ur ${GITHUB_WORKSPACE}/${{ matrix.hardware }}.zip ${{ matrix.tftfolder }}
        working-directory: 'SDCard_install/Unified'

      - name: Zip config
        run: zip -ur ${GITHUB_WORKSPACE}/${{ matrix.hardware }}.zip config.ini
        working-directory: 'SDCard_install'

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.hardware }}.zip
          asset_name: ${{ matrix.hardware }}.zip
          asset_content_type: application/zip
