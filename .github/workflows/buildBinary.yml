name: Build Binaries
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            .cache/pip
            .platformio/.cache
            venv
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run:
          |
          python -m venv venv
          source venv/bin/activate
          pip install --disable-pip-version-check --upgrade platformio

      - id: list
        name: List hardware
        run: |
          JSON=$(cat hardware.json | jq -c '.')
          echo matrix=${JSON} | tee -a $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            .cache/pip
            .platformio/.cache
            venv
          key: ${{ runner.os }}-pio
      - name: Build Artillery TFT Controller V1.2
        run: |
          source venv/bin/activate
          platformio run --environment ${{ matrix.hardware }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.hardware }}
          path: |
            .pio/build/${{ matrix.hardware }}
          retention-days: 1

  release:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          path: firmwares

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip release
        id: ziplist
        uses: ./.github/actions/zip-release

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: v${{ github.ref_name }}
          name: Release v${{ github.ref_name }}
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            ${{ steps.ziplist.outputs.files }}
